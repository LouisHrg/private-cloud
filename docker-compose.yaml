version: "3.7"

services:

  certbot:
    image: certbot/certbot
    container_name: certbot
    env_file: .env
    command: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - letsencrypt_www:/var/www/letsencrypt
    networks:
      - front_network

  reverse-proxy:
    build:
      context: ./
      dockerfile: ./build/Dockerfile-reverse-proxy
    image: reverse-proxy:custom
    container_name: proxy
    env_file: .env
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - passbolt
      - standardnotes
      - cozy
      - davis
      - syncthing
      - xbs
      - wekan
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - letsencrypt_www:/var/www/letsencrypt
      - davis_www:/var/www/davis
    networks:
      - front_network
      - passwords_network
      - notes_network
      - cloud_network
      - calendar_network
      - bookmarks_network
      - sync_network
      - tasks_network
    ports:
      - 80:80
      - 443:443

  mysql:
    build:
      context: ./
      dockerfile: ./build/Dockerfile-mysql
    image: mariadb:custom
    container_name: mysql
    env_file: .env
    restart: unless-stopped
    volumes:
      - database_mysql_volume:/var/lib/mysql
    networks:
      - passwords_network
      - notes_network
      - calendar_network

  passbolt:
    build:
      context: ./
      dockerfile: ./build/Dockerfile-passbolt
    image: passbolt:custom
    container_name: passbolt
    env_file: .env
    restart: unless-stopped
    command: ["/usr/bin/wait-for.sh", "mysql:3306", "--", "/docker-entrypoint.sh"]
    tty: true
    depends_on:
      - mysql
    volumes:
      - gpg_volume:/var/www/passbolt/config/gpg
    tmpfs:
      - /run
    networks:
      - passwords_network

  standardnotes:
    build:
      context: ./
      dockerfile: ./build/Dockerfile-standardnotes
    image: standardnotes:custom
    container_name: notes
    env_file: .env
    restart: unless-stopped
    command: >
        sh -c 'while ! nc -vz mysql 3306 ; do sleep 10 ; done &&
               /data/src/docker/entrypoint bootstrap &&
               /data/src/docker/entrypoint start'
    depends_on:
      - mysql
    networks:
      - notes_network

  # Cozy Database
  couchdb:
    image: couchdb:2.3
    container_name: couchdb
    env_file: .env
    restart: unless-stopped
    volumes:
      - database_couch_volume:/opt/couchdb/data
    networks:
      - cloud_network

  # Cozy Stack
  cozy:
    image: cozy/cozy-stack
    container_name: cozy
    env_file: .env
    restart: unless-stopped
    depends_on:
      - couchdb
    volumes:
      - files_cozy_volume:/var/lib/cozy/data
    networks:
      - cloud_network

  # Caldav / Carddav server
  davis:
    build:
      context: ./
      dockerfile: ./build/Dockerfile-davis
      args:
        version: "1.4.3"
    image: davis:custom
    container_name: davis
    env_file: .env
    restart: unless-stopped
    depends_on:
      - mysql
    volumes:
      - davis_www:/var/www/davis
    networks:
      - calendar_network

  # XBS = X-browser sync
  xbs:
    build:
      context: ./
      dockerfile: ./build/Dockerfile-xbs
    image: xbs:custom
    container_name: xbs
    env_file: .env
    restart: unless-stopped
    depends_on:
      - mongo
    networks:
      - bookmarks_network

  # XBS Database / Wekan database
  mongo:
    build:
      context: ./
      dockerfile: ./build/Dockerfile-mongo
    image: mongo:custom
    container_name: mongo
    env_file: .env
    restart: unless-stopped
    volumes:
      - database_mongo_volume:/data/db
    networks:
      - bookmarks_network
      - tasks_network

  # Syncthing
  syncthing:
    build:
      context: ./
      dockerfile: ./build/Dockerfile-syncthing
    image: syncthing:custom
    container_name: syncthing
    env_file: .env
    restart: unless-stopped
    volumes:
      - files_sync_volume:/var/syncthing/data
    networks:
      - sync_network
    ports:
      - 22000:22000 # We must expose this port for Syncthing to work

  # Wekan (tasks)
  wekan:
    image: wekanteam/wekan
    container_name: tasks
    env_file: .env
    restart: unless-stopped
    depends_on:
      - mongo
    networks:
      - tasks_network

networks:
  front_network: ~
  passwords_network: ~
  notes_network: ~
  cloud_network: ~
  calendar_network: ~
  bookmarks_network: ~
  sync_network: ~
  tasks_network: ~

volumes:
  letsencrypt_certs:
    name: letsencrypt_certs
  letsencrypt_www:
    name: letsencrypt_www
  gpg_volume:
    name: gpg_volume
  davis_www:
    name: davis_www
  database_mysql_volume: # This volume is actually an attached OpenStack Block storage
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/databases/mysql
  database_couch_volume: # This volume is actually an attached OpenStack Block storage
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/databases/couch
  database_mongo_volume: # This volume is actually an attached OpenStack Block storage
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/databases/mongo
  files_cozy_volume: # This volume is actually an attached OpenStack Block storage. It stores the cozy files
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/files/cozy
  files_sync_volume: # This volume is actually an attached OpenStack Block storage. It stores the syncthing data
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/files/sync
