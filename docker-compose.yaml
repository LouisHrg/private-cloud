version: "3.7"

services:

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - letsencrypt_www:/var/www/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  reverse-proxy:
    build:
      context: ./
      dockerfile: Dockerfile-reverse-proxy
    image: reverse-proxy:custom
    container_name: proxy
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - letsencrypt_www:/var/www/letsencrypt
    ports:
        - 80:80
        - 443:443
    depends_on:
      - passbolt
      - standardnotes
      - cozy
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  db:
    build:
      context: ./
      dockerfile: Dockerfile-db
    image: mariadb:custom
    container_name: db
    env_file:
      - environment/production.env
    volumes:
      - database_mysql_volume:/var/lib/mysql

  passbolt:
    container_name: passbolt
    image: passbolt/passbolt:latest
    tty: true
    depends_on:
      - db
    env_file:
      - environment/production.env
    volumes:
      - gpg_volume:/var/www/passbolt/config/gpg
    tmpfs:
      - /run
    command: ["/usr/bin/wait-for.sh", "db:3306", "--", "/docker-entrypoint.sh"]
    restart: always

  standardnotes:
    build:
      context: ./
      dockerfile: Dockerfile-standardnotes
    image: standardnotes:custom
    container_name: notes
    depends_on:
      - db
    env_file:
      - environment/production.env
    command: >
      bash -c 'while ! nc -vz db 3306 ; do sleep 10 ; done &&
               sleep 2 &&
               /data/src/docker/entrypoint bootstrap &&
               /data/src/docker/entrypoint start'
    restart: always

  # Database
  couchdb:
    image: couchdb:2.3
    container_name: couchdb
    restart: unless-stopped
    env_file:
      - environment/production.env
    volumes:
      - database_couch_volume:/opt/couchdb/data
    ports:
      - 5984:5984

  # Cozy Stack
  cozy:
    image: cozy/cozy-stack
    container_name: cozy
    restart: unless-stopped
    env_file:
      - environment/production.env
    depends_on:
      - couchdb
    volumes:
      - files_volume:/var/lib/cozy/data
      - ./configurations/cozy/cozy.yaml:/etc/cozy/cozy.yaml.local
    ports:
      - 8080:8080
      - 6060:6060

volumes:
  letsencrypt_certs: ~
  letsencrypt_www: ~
  database_mysql_volume: # This volume is actually an attached OpenStack Block storage
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/databases/mysql
  database_couch_volume: # This volume is actually an attached OpenStack Block storage
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/databases/couch
  files_volume: # This volume is actually an attached OpenStack Block storage. It stores the cozy files
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/files
  gpg_volume: ~
