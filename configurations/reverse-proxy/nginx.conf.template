worker_processes 2;

events { worker_connections 1024; }

http {

    sendfile on;
    include mime.types;

    client_max_body_size 512M;

    access_log off;

    upstream docker-standardfile {
        server notes:3000;
    }

    upstream docker-passbolt {
        server passbolt;
    }

    upstream docker-cozy {
        server cozy:8080;
    }

    upstream docker-baikal {
        server baikal:9000;
    }

    upstream docker-xbrowsersync {
        server xbs:8080;
    }

    upstream docker-syncthing {
        server syncthing:8384;
    }

    upstream docker-wekan {
        server wekan:8080;
    }

    # Only for certificates
    server {
        listen 80;
        server_name $NOTES_DOMAIN, $PASSWORDS_DOMAIN, .$CLOUD_DOMAIN, $CALENDAR_DOMAIN, $BOOKMARKS_DOMAIN, $SYNC_DOMAIN, $TASKS_DOMAIN;

        location /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
        }

        location / {
            return 301 https://\$host\$request_uri;
        }
    }

    # Notes
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name $NOTES_DOMAIN;

        ssl_certificate /etc/letsencrypt/live/$NOTES_DOMAIN/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/$NOTES_DOMAIN/privkey.pem;

        include /etc/nginx/conf/options-ssl-nginx.conf;
        ssl_dhparam /etc/nginx/conf/ssl-dhparams.pem;

        location / {
            proxy_pass         http://docker-standardfile;
            proxy_redirect     off;
            proxy_set_header   Host \$host;
            proxy_set_header   X-Real-IP \$remote_addr;
            proxy_set_header   X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host \$server_name;
        }
    }

    # Passwords
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name $PASSWORDS_DOMAIN;

        ssl_certificate /etc/letsencrypt/live/$PASSWORDS_DOMAIN/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/$PASSWORDS_DOMAIN/privkey.pem;

        include /etc/nginx/conf/options-ssl-nginx.conf;
        ssl_dhparam /etc/nginx/conf/ssl-dhparams.pem;

        location / {
            proxy_pass         http://docker-passbolt;
            proxy_redirect     off;
            proxy_set_header   Host \$host;
            proxy_set_header   X-Real-IP \$remote_addr;
            proxy_set_header   X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host \$server_name;
        }
    }

    # Cozy
    server {
        server_name $CLOUD_DOMAIN;

        # redirect the root to the drive, to avoid an error on missing
        # "home.$CLOUD_DOMAIN" app. A bit ugly, maybe improve later.
        location = / {
            return 301 https://drive.$CLOUD_DOMAIN;
        }

        include cloud.conf;
    }
    server {
        server_name *.$CLOUD_DOMAIN;
        include cloud.conf;
    }

    # Caldav / Carddav Baikal
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name $CALENDAR_DOMAIN;

        ssl_certificate /etc/letsencrypt/live/$CALENDAR_DOMAIN/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/$CALENDAR_DOMAIN/privkey.pem;

        include /etc/nginx/conf/options-ssl-nginx.conf;
        ssl_dhparam /etc/nginx/conf/ssl-dhparams.pem;

        root /var/www/calendar_server/html/;
        index index.php;

        rewrite ^/.well-known/caldav /dav.php redirect;
        rewrite ^/.well-known/carddav /dav.php redirect;

        charset utf-8;

        location ~ /(\.ht) {
            deny all;
            return 404;
        }

        location / {
            try_files \$uri \$uri/ /index.php\$is_args\$args;
        }

        location ~ ^(.+\.php)(.*)\$ {
            try_files       \$fastcgi_script_name =404;
            include         fastcgi_params;
            fastcgi_pass    docker-baikal;
            fastcgi_param   SCRIPT_FILENAME  \$document_root\$fastcgi_script_name;
            fastcgi_param   PATH_INFO        \$fastcgi_path_info;
            fastcgi_split_path_info  ^(.+\.php)(.*)\$;
        }
    }

    # Bookmarks
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name $BOOKMARKS_DOMAIN;

        ssl_certificate /etc/letsencrypt/live/$BOOKMARKS_DOMAIN/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/$BOOKMARKS_DOMAIN/privkey.pem;

        include /etc/nginx/conf/options-ssl-nginx.conf;
        ssl_dhparam /etc/nginx/conf/ssl-dhparams.pem;

        location / {
            proxy_pass         http://docker-xbrowsersync;
            proxy_redirect     off;
            proxy_set_header   Host \$host;
            proxy_set_header   X-Real-IP \$remote_addr;
            proxy_set_header   X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host \$server_name;
        }
    }

    # Syncthing
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name $SYNC_DOMAIN;

        ssl_certificate /etc/letsencrypt/live/$SYNC_DOMAIN/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/$SYNC_DOMAIN/privkey.pem;

        include /etc/nginx/conf/options-ssl-nginx.conf;
        ssl_dhparam /etc/nginx/conf/ssl-dhparams.pem;

        location / {
            # We need HTTPS here since syncthing enforces it, see https://github.com/syncthing/syncthing/issues/4860
            proxy_pass         https://docker-syncthing;
            proxy_redirect     off;
            proxy_set_header   Host \$host;
            proxy_set_header   X-Real-IP \$remote_addr;
            proxy_set_header   X-Forwarded-Proto \$scheme;
            proxy_set_header   X-Forwarded-For \$proxy_add_x_forwarded_for;

            proxy_read_timeout      600s;
            proxy_send_timeout      600s;
        }
    }

    # Tasks / Wekan
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name $TASKS_DOMAIN;

        ssl_certificate /etc/letsencrypt/live/$TASKS_DOMAIN/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/$TASKS_DOMAIN/privkey.pem;

        include /etc/nginx/conf/options-ssl-nginx.conf;
        ssl_dhparam /etc/nginx/conf/ssl-dhparams.pem;

        location / {
            proxy_pass         http://docker-wekan;
            proxy_redirect     off;
            proxy_set_header   Host \$host;
            proxy_set_header   X-Real-IP \$remote_addr;
            proxy_set_header   X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host \$server_name;
        }
    }
}