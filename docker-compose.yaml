version: "3.7"

services:

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - letsencrypt_www:/var/www/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  reverse-proxy:
    build:
      context: ./
      dockerfile: Dockerfile-reverse-proxy
    image: reverse-proxy:custom
    container_name: proxy
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - letsencrypt_www:/var/www/letsencrypt
      - baikal_www:/var/www/calendar_server
    ports:
        - 80:80
        - 443:443
    depends_on:
      - passbolt
      - standardnotes
      - cozy
      - baikal
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  mysql:
    build:
      context: ./
      dockerfile: Dockerfile-mysql
    image: mariadb:custom
    container_name: mysql
    env_file:
      - environment/production.env
    volumes:
      - database_mysql_volume:/var/lib/mysql

  passbolt:
    container_name: passbolt
    image: passbolt/passbolt:latest
    tty: true
    depends_on:
      - mysql
    env_file:
      - environment/production.env
    volumes:
      - gpg_volume:/var/www/passbolt/config/gpg
    tmpfs:
      - /run
    command: ["/usr/bin/wait-for.sh", "mysql:3306", "--", "/docker-entrypoint.sh"]
    restart: unless-stopped

  standardnotes:
    build:
      context: ./
      dockerfile: Dockerfile-standardnotes
    image: standardnotes:custom
    container_name: notes
    depends_on:
      - mysql
    env_file:
      - environment/production.env
    command: >
      bash -c 'while ! nc -vz mysql 3306 ; do sleep 10 ; done &&
               sleep 2 &&
               /data/src/docker/entrypoint bootstrap &&
               /data/src/docker/entrypoint start'
    restart: unless-stopped

  # Cozy Database
  couchdb:
    image: couchdb:2.3
    container_name: couchdb
    restart: unless-stopped
    env_file:
      - environment/production.env
    volumes:
      - database_couch_volume:/opt/couchdb/data
    ports:
      - 5984:5984

  # Cozy Stack
  cozy:
    image: cozy/cozy-stack
    container_name: cozy
    restart: unless-stopped
    env_file:
      - environment/production.env
    depends_on:
      - couchdb
    volumes:
      - files_volume:/var/lib/cozy/data
      - ./configurations/cozy/cozy.yaml:/etc/cozy/cozy.yaml.local
    ports:
      - 8080:8080
      - 6060:6060

  # Caldav server
  baikal:
    build:
      context: ./
      dockerfile: Dockerfile-baikal
    image: baikal:custom
    container_name: baikal
    env_file:
      - environment/production.env
    depends_on:
      - mysql
    volumes:
      - baikal_www:/var/www/calendar_server

  # # XBS = X-browser sync
  # xbs:
  #   container_name: xbs
  #   env_file:
  #     - environment/production.env
  #   depends_on:
  #     - mongo
  #   image: xbrowsersync/api:1.1.9
  #   restart: unless-stopped
  #   volumes:
  #     - ./configurations/xbs/settings.json:/usr/src/api/config/settings.json

  # # XBS Database
  # mongo:
  #   container_name: mongo
  #   env_file:
  #     - environment/production.env
  #   image: mongo:4.0.10
  #   restart: unless-stopped
  #   volumes:
  #     - database_mongo_volume:/data/db
  #     - ./configurations/xbs/mongoconfig.js:/docker-entrypoint-initdb.d/mongoconfig.js

volumes:
  letsencrypt_certs: ~
  letsencrypt_www: ~
  gpg_volume: ~
  baikal_www: ~
  database_mysql_volume: # This volume is actually an attached OpenStack Block storage
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/databases/mysql
  database_couch_volume: # This volume is actually an attached OpenStack Block storage
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/databases/couch
  # database_mongo_volume: # This volume is actually an attached OpenStack Block storage
  #   driver: local
  #   driver_opts:
  #     o: bind
  #     type: none
  #     device: /mnt/databases/mongo
  files_volume: # This volume is actually an attached OpenStack Block storage. It stores the cozy files
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /mnt/files
