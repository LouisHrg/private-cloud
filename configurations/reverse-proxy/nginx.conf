worker_processes 1;

events { worker_connections 1024; }

http {

    sendfile on;
    include mime.types;

    upstream docker-standardfile {
        server notes:3000;
    }

    upstream docker-passbolt {
        server passbolt;
    }

    upstream docker-cozy {
        server cozy:8080;
    }

    upstream docker-baikal {
        server baikal:9000;
    }

    # Only for certificates
    server {
        listen 80;
        server_name notes.***REMOVED***.me, sesame.***REMOVED***.me, .cloud.***REMOVED***.me, calendar.***REMOVED***.me, bookmarks.***REMOVED***.me;

        location /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Notes
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name notes.***REMOVED***.me;

        ssl_certificate /etc/letsencrypt/live/notes.***REMOVED***.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/notes.***REMOVED***.me/privkey.pem;

        include /etc/nginx/conf/options-ssl-nginx.conf;
        ssl_dhparam /etc/nginx/conf/ssl-dhparams.pem;

        location / {
            proxy_pass         http://docker-standardfile;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }

    # Passwords
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name sesame.***REMOVED***.me;

        ssl_certificate /etc/letsencrypt/live/sesame.***REMOVED***.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/sesame.***REMOVED***.me/privkey.pem;

        include /etc/nginx/conf/options-ssl-nginx.conf;
        ssl_dhparam /etc/nginx/conf/ssl-dhparams.pem;

        location / {
            proxy_pass         http://docker-passbolt;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }

    # Cozy
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        # https://nginx.org/en/docs/http/server_names.html
        # A special wildcard name in the form “.example.org” can be used to match both the exact name “example.org” and the wildcard name “*.example.org”. 
        server_name .cloud.***REMOVED***.me;

        ssl_certificate /etc/letsencrypt/live/cloud.***REMOVED***.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/cloud.***REMOVED***.me/privkey.pem;

        include /etc/nginx/conf/options-ssl-nginx.conf;
        ssl_dhparam /etc/nginx/conf/ssl-dhparams.pem;

        # redirect the root to the drive, to avoid an error on missing
        # "home.cloud.***REMOVED***.me" app. A bit ugly, maybe improve later.
        location = / {
            if ($http_host = cloud.***REMOVED***.me) {
                return 301 https://drive.cloud.***REMOVED***.me;
            }
            proxy_pass         http://docker-cozy;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

        location / {
            proxy_pass         http://docker-cozy;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }

    # Caldav / Carddav Baikal
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name calendar.***REMOVED***.me;

        ssl_certificate /etc/letsencrypt/live/calendar.***REMOVED***.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/calendar.***REMOVED***.me/privkey.pem;

        include /etc/nginx/conf/options-ssl-nginx.conf;
        ssl_dhparam /etc/nginx/conf/ssl-dhparams.pem;

        root /var/www/calendar_server/html/;
        index index.php;

        rewrite ^/.well-known/caldav /dav.php redirect;
        rewrite ^/.well-known/carddav /dav.php redirect;

        charset utf-8;

        location ~ /(\.ht) {
            deny all;
            return 404;
        }

        location / {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ ^(.+\.php)(.*)$ {
            try_files       $fastcgi_script_name =404;
            include         fastcgi_params;
            fastcgi_pass    docker-baikal;
            fastcgi_param   SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            fastcgi_param   PATH_INFO        $fastcgi_path_info;
            fastcgi_split_path_info  ^(.+\.php)(.*)$;
        }
    }
}